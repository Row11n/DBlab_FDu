# Generated by Django 4.0.4 on 2022-05-07 09:22

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('uid', models.CharField(max_length=10, unique=True, verbose_name='工号')),
                ('username', models.CharField(max_length=15, unique=True, verbose_name='用户名')),
                ('realname', models.CharField(blank=True, max_length=13, null=True, verbose_name='真实姓名')),
                ('gender', models.CharField(blank=True, choices=[('1', '男'), ('2', '女')], max_length=2, null=True, verbose_name='性别')),
                ('phone', models.CharField(blank=True, max_length=11, null=True, verbose_name='手机号码')),
                ('email', models.EmailField(max_length=254, verbose_name='邮箱')),
                ('avatar', models.ImageField(default='avatar/default.jpg', upload_to='avatar', verbose_name='头像')),
                ('birthday', models.DateField(default='2010-01-01', verbose_name='出生年月')),
                ('is_active', models.BooleanField(default=True, verbose_name='激活状态')),
                ('is_staff', models.BooleanField(default=True, verbose_name='是否是员工')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': '用户',
                'verbose_name_plural': '用户',
            },
        ),
    ]
